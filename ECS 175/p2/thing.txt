glColor3f(1.0, 1.0, 1.0);
	if (shape == 0) Sprint(-3, -7, "Wire Cube");
	if (shape == 1) Sprint(-3, -7, "Wire Cone");
	if (shape == 2) Sprint(-3, -7, "Wire Sphere");
	if (shape == 3) Sprint(-3, -7, "Wire Torus");
	if (shape == 4) Sprint(-3, -7, "Wire Dodecahedron");
	if (shape == 5) Sprint(-3, -7, "Wire Octahedron");
	if (shape == 6) Sprint(-3, -7, "Wire Tetrahedron");
	if (shape == 7) Sprint(-3, -7, "Wire Icosahedron");
	if (shape == 8) Sprint(-3, -7, "Wire Teapot");

	// Setup view, and print view state on screen
	if (view_state == 1)
	{
	glColor3f(1.0, 1.0, 1.0);
	Sprint(-2, 4, "Perspective view");
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluPerspective(60, 1, 1, 30);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	}
	else
	{
	glColor3f(1.0, 1.0, 1.0);
	Sprint(-2, 4, "Ortho view");
	}

	glColor3f(0.0, 0.0, 1.0);  // Cube color

	// Lighting on/off
	if (light_state == 1)
	{
	glDisable(GL_LIGHTING);  // Turn off lighting
	glDisable(GL_COLOR_MATERIAL); // Turn off material, which needs lighting to work
	}
	else
	{
	glEnable(GL_LIGHTING); // Turn on lighting
	glEnable(GL_COLOR_MATERIAL); // Turn on material settings
	glColorMaterial(GL_FRONT, GL_AMBIENT);
	glColor4f(0.65, 0.65, 0.65, 0.4);
	glColorMaterial(GL_FRONT, GL_EMISSION);
	glColor4f(0.10, 0.10, 0.10, 0.0);
	glColorMaterial(GL_FRONT, GL_SPECULAR);
	glColor4f(0.5, 0.5, 0.5, 0.4);
	glColorMaterial(GL_FRONT, GL_DIFFUSE);
	glColor4f(0.85, 0.85, 0.85, 0.4);
	}

	gluLookAt(0, 0, 20, 0, 0, 0, 0, 1, 0);

	//glRotatef( 45, 1.0, 1.0, 0.0); // rotate cube
	glRotatef(spin++, 1.0, 1.0, 1.0); // spin cube

	if (shape == 0) glutWireCube(10); // Draw a cube
	if (shape == 1) glutWireCone(5, 10, 16, 16);  // Draw a Cone
	if (shape == 2) glutWireSphere(5, 16, 16);  // Draw a Sphere
	if (shape == 3) glutWireTorus(2.5, 5, 16, 16);
	if (shape == 4)
	{
	glScalef(3.5, 3.5, 3.5);
	glutSolidDodecahedron();
	}

	if (shape == 5)
	{
	glScalef(5.0, 5.0, 5.0);
	glutWireOctahedron();
	}
	if (shape == 6)
	{
	glScalef(5.0, 5.0, 5.0);
	glutWireTetrahedron();
	}

	if (shape == 7)
	{
	glScalef(5.0, 5.0, 5.0);
	glutWireIcosahedron();
	}
	if (shape == 8) glutWireTeapot(5);













Pixel *getCenter(const Polygon *pl)
{
	int xAvg = 0, yAvg = 0, zAvg=0;
	for (int i = 0; i < pl->numPts; i++)
	{
		xAvg += pl->points[i]->x;
		yAvg += pl->points[i]->y;
		zAvg += pl->points[i]->z;
	}

	xAvg = xAvg / pl->numPts;
	yAvg = yAvg / pl->numPts;
	zAvg = zAvg / pl->numPts;

	//cout << xAvg << " " << yAvg << endl;
	Pixel *pix = new Pixel(xAvg, yAvg, zAvg);
	return pix;
}
void Polygon::scale3D(int degree)
{
	Pixel *pix = getCenter(this);
	this->trans3D(-(pix->x), -(pix->y), -(pix->z));

	for (int i = 0; i < numPts; i++)
	{
		points[i]->x *= degree;
		points[i]->y *= degree;
		points[i]->z *= degree;
	}

	this->trans3D((pix->x), (pix->y), (pix->z));
}